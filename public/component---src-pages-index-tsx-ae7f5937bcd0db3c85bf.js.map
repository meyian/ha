{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["IndexPage","_useState","useState","show","setShow","_useState2","handleClose","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_6__","_components_Page__WEBPACK_IMPORTED_MODULE_4__","_components_Container__WEBPACK_IMPORTED_MODULE_5__","type","onClick","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_2__","onHide","Header","closeButton","Title","Body","Footer","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_3__","variant","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","getEmSize","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","Page","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledContainer","Container","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","normalize","StyledLayoutRoot","styled_base_browser_esm","name","styles","LayoutRoot","core_browser_esm","react","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","title","site","siteMetadata","meta","content","description","keywords","components_LayoutMain","_991718019"],"mappings":"wKAyDeA,UArCG,WAAM,IAAAC,EACEC,oBAAS,GAA1BC,EADeF,EAAA,GACTG,EADSH,EAAA,GAAAI,EAEgBH,oBAAS,GAEzCI,GAJgBD,EAAA,GAAAA,EAAA,GAIF,kBAAMD,GAAQ,KAGlC,OACEG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,KACEH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,KACEJ,OAAAC,EAAA,EAAAD,CAAA,cACEA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,KAAK,SAASC,QAPb,kBAAMT,GAAQ,KAOvB,MAKFG,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CAAOX,KAAMA,EAAMY,OAAQT,GACzBC,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvBV,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAMI,MAAP,uBAEFX,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAMK,KAAP,qBACAZ,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAMM,OAAP,KACEb,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAQC,QAAQ,YAAYT,QAASP,GAArC,SAGAC,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAQC,QAAQ,UAAUT,QAASP,GAAnC,wDC9CdiB,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAEO,IAAMJ,EAAS,CACpBK,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,GAAI,CACFC,OAAQ,UACRC,MAAO,UACPC,QAAS,WAEXC,KAAM,UACNC,KAAM,CACJC,KAAM,qCACNC,KAAM,2CACNC,KAAM,uBAERC,MAAO,OACPC,MAAO,QAGInB,EAAQ,CACnBoB,UACE,2JACFC,MAAO,2CACPC,UAAW,mFAGArB,EAAc,CACzBsB,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,MAGOzB,EAAS,CACpBuB,GAAI,IACJC,GAAI,IACJC,GAAI,MAGOxB,EAAa,CACxByB,SAAU,CACRC,QAAS,GACTC,MAAO,IAETC,aAAc,CACZC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MAENC,WAAY,CACVP,QAAS,KACTQ,QAAS,KAEXC,iBAAkB,uCC3DpB1C,EAAAC,EAAAC,EAAA,sBAAAyC,IAAA,IAAAC,EAAA5C,EAAA,KAEa2C,EAAY,SAACE,GAAD,OAAkBA,EAAOtC,IAAWyB,SAASC,8BCFtE,IAAsBa,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8KCazCK,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACEzE,OAAAC,EAAA,EAAAD,CAAC6E,EAAAC,EAAMC,SAAP,KACGH,GAAaD,EAAOC,IACnBA,GAAa5E,OAAAC,EAAA,EAAAD,CAAA,qCAKrB,IAAMgF,EAAc,SAAAC,GAAS,IACnBR,EAAkCQ,EAAlCR,KAAMC,EAA4BO,EAA5BP,MAAOC,EAAqBM,EAArBN,OAAQO,EAAaD,EAAbC,SAE7B,OACElF,OAAAC,EAAA,EAAAD,CAACmE,EAAmBgB,SAApB,KACG,SAAAX,GAAe,OACdxE,OAAAC,EAAA,EAAAD,CAACsE,EAAD,CACEG,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUO,EAClBV,gBAAiBA,OA6B3BQ,EAAYI,UAAY,CACtBX,KAAMY,IAAUC,OAChBZ,MAAOW,IAAUE,OAAOC,WACxBb,OAAQU,IAAUI,KAClBP,SAAUG,IAAUI,6EClEhBC,EAAa1F,OAAA2F,EAAA,EAAA3F,CAAA,OAAH4F,OAAA,YAAG5F,CAAH,kDAIHuB,IAAWmC,iBAJR,2BAcDmC,IAFmB,SAAAtB,GAAA,IAAGW,EAAHX,EAAGW,SAAUY,EAAbvB,EAAauB,UAAb,OAA6B9F,OAAA+F,EAAA,EAAA/F,CAAC0F,EAAD,CAAYI,UAAWA,GAAYZ,oFCX5Fc,EAAkBhG,OAAA2F,EAAA,EAAA3F,CAAA,OAAH4F,OAAA,aAAG5F,CAAH,6EAKN2D,YAAUrC,IAAOwB,IALX,OAcNmD,IAF6B,SAAA1B,GAAA,IAAGW,EAAHX,EAAGW,SAAUY,EAAbvB,EAAauB,UAAb,OAA6B9F,OAAA+F,EAAA,EAAA/F,CAACgG,EAAD,CAAiBF,UAAWA,GAAYZ,yRCb3GgB,EAAmB,SAAA3B,GAAiC,IAA9B4B,EAA8B5B,EAA9B4B,SAAUC,EAAoB7B,EAApB6B,cACpC,OAAKA,EAGEhC,IAAMiC,cAAcC,IAApBtG,OAAAuG,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBd,UAAY,CAC3Be,SAAUd,IAAUoB,MAAM,CACxBC,SAAUrB,IAAUE,OAAOC,aAC1BA,YAGUU,gICnBAS,EAAA,+IAYEpF,IAAWyB,SAASC,QAZrC,oCAamB1B,IAAWiC,WAAWP,QAbzC,uHAoBmB7B,IAAMoB,UApBzB,iBAqBarB,IAAOoB,MArBpB,4BAsBwBpB,IAAOmB,MAtB/B,qGA4BanB,IAAOK,MA5BpB,4WAsDwBL,IAAOU,GAAGE,MAtDlC,mIA8DwBZ,IAAOU,GAAGE,MA9DlC,8IAyE8BZ,IAAOU,GAAGG,QAzExC,2DA4E8Bb,IAAOU,GAAGG,QA5ExC,qIAqFab,IAAOoB,MArFpB,8CAuFmBhB,IAAWiC,WAAWC,QAvFzC,iGA6FiBlC,IAAW4B,aAAaC,GA7FzC,uCAiGiB7B,IAAW4B,aAAaE,GAjGzC,uCAqGiB9B,IAAW4B,aAAaG,GArGzC,+CAyGiB/B,IAAW4B,aAAaI,GAzGzC,mGAkHapC,IAAOoB,MAlHpB,2QAwI4BpB,IAAOU,GAAGE,MAxItC,2GA8IgCZ,IAAOU,GAAGE,MA9I1C,iBA+IaZ,IAAOe,KAAKG,KA/IzB,2GAuJyBsB,YAAUtC,IAAYwB,IAvJ/C,yFCEM+D,EAAmB5G,OAAA6G,EAAA,EAAA7G,CAAA,OAAH4F,OAAA,aAAG5F,CAAH,CAAA8G,KAAA,SAAAC,OAAA,yDAiBPC,EAP+B,SAAAzC,GAAA,IAAGW,EAAHX,EAAGW,SAAUY,EAAbvB,EAAauB,UAAb,OAC5C9F,OAAAiH,EAAA,EAAAjH,CAAAkH,EAAA,cACElH,OAAAiH,EAAA,EAAAjH,CAACiH,EAAA,EAAD,CAAQF,OAAQ,kBAAMI,WAAN,CAAUR,MAC1B3G,OAAAiH,EAAA,EAAAjH,CAAC4G,EAAD,CAAkBd,UAAWA,GAAYZ,KCfvCkC,EAAmBpH,OAAA6G,EAAA,EAAA7G,CAAA,QAAH4F,OAAA,aAAG5F,CAAH,CAAA8G,KAAA,SAAAC,OAAA,+CAcPM,EAJ+B,SAAA9C,GAAA,IAAGW,EAAHX,EAAGW,SAAUY,EAAbvB,EAAauB,UAAb,OAC5C9F,OAAAiH,EAAA,EAAAjH,CAACoH,EAAD,CAAkBtB,UAAWA,GAAYZ,ICiC5BoC,IA3Be,SAAA/C,GAAA,IAAGW,EAAHX,EAAGW,SAAH,OAC5BlF,OAAAiH,EAAA,EAAAjH,CAACuH,EAAA,EAAD,CACE7C,MAAK,YAULC,OAAQ,SAACF,GAAD,OACNzE,OAAAiH,EAAA,EAAAjH,CAACwH,EAAD,KACExH,OAAAiH,EAAA,EAAAjH,CAACyH,EAAA3C,EAAD,CACE4C,MAAOjD,EAAKkD,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEf,KAAM,cAAegB,QAASrD,EAAKkD,KAAKC,aAAaG,aACvD,CAAEjB,KAAM,WAAYgB,QAASrD,EAAKkD,KAAKC,aAAaI,aAGxDhI,OAAAiH,EAAA,EAAAjH,CAACiI,EAAD,KAAa/C,KApBnBT,KAAAyD","file":"component---src-pages-index-tsx-ae7f5937bcd0db3c85bf.js","sourcesContent":["import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst showModal = (pageToShow: string) => {\n  // set it for pageToShow\n  // show the modal\n}\n\nconst togglePage = (newPage: string) => {\n  // turn off all divs\n  // show newPage\n}\n\nconst IndexPage = () => {\n  const [show, setShow] = useState(false)\n  const [activeModal, setActiveModal] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <header>\n            <button type=\"button\" onClick={handleShow}>\n              ?\n            </button>\n          </header>\n\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Modal heading</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>[help/about]</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose}>\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      </Page>\n    </IndexLayout>\n  )\n}\n\nexport default IndexPage\n\n/*\n\n<Link to=\"/page-2/\">Go to page 2</Link>\n\n{ name: string; age: number }\n\n*/\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}